{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\shakh\\\\Desktop\\\\\\u0420\\u041C\\u041F\\\\Weather\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport WeatherCard from \"./src/WeatherCard\";\nimport Button from \"react-native-web/dist/exports/Button\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      temp: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      feels_like: undefined,\n      speed: undefined,\n      humidity: undefined,\n      value: undefined\n    };\n    _this.API_KEY = \"961b7ded10f2be5cb6b598f0160b2c58\";\n\n    _this.getWeatherCurrent = function _callee(value) {\n      var url, data;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\" + value + \"&appid=\" + _this.API_KEY));\n\n            case 2:\n              url = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(url.json());\n\n            case 5:\n              data = _context.sent;\n              console.log(data);\n\n              _this.setState({\n                temp: (data.main.temp - 273.15).toFixed(),\n                temp_max: (data.main.temp_max - 273.15).toFixed(),\n                temp_min: (data.main.temp_min - 273.15).toFixed(),\n                feels_like: (data.main.feels_like - 273.15).toFixed(),\n                speed: \"\" + (data.wind.speed + 'м/с'),\n                humidity: \"\" + (data.main.humidity + '%'),\n                value: value\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, React.createElement(StatusBar, {\n        style: \"light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.NavBar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.text_Nav,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, \"\\u041F\\u043E\\u0433\\u043E\\u0434\\u0430\")), React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434\"), React.createElement(Picker, {\n        selectedValue: this.state.value,\n        style: {\n          height: 50,\n          width: '80%'\n        },\n        onValueChange: function onValueChange(itemValue) {\n          return _this2.getWeatherCurrent(itemValue);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      }, React.createElement(Picker.Item, {\n        label: \"\\u0411\\u0435\\u043B\\u0433\\u043E\\u0440\\u043E\\u0434\",\n        value: \"Belgorod\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"\\u0421\\u0430\\u043D\\u043A-\\u041F\\u0435\\u0442\\u0435\\u0440\\u0431\\u0443\\u0440\\u0433\",\n        value: \"Saint Petersburg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"\\u041D\\u043E\\u0432\\u043E\\u0441\\u0438\\u0431\\u0438\\u0440\\u0441\\u043A\",\n        value: \"Novosibirsk\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"\\u041A\\u0440\\u0430\\u0441\\u043D\\u043E\\u044F\\u0440\\u0441\\u043A\",\n        value: \"Krasnoyarsk\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }\n      }))), React.createElement(Button, {\n        label: \"dlkvnjfnl\",\n        atylw: {\n          position: 'absolute',\n          bottom: 0,\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: {\n          position: 'absolute',\n          bottom: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, React.createElement(WeatherCard, {\n        temp: this.state.temp,\n        temp_max: this.state.temp_max,\n        temp_min: this.state.temp_min,\n        feels_like: this.state.feels_like,\n        wind: this.state.speed,\n        humidity: this.state.humidity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 10,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 20,\n    marginBottom: 5\n  },\n  NavBar: {\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#3949ab',\n    paddingBottom: 10,\n    borderBottomLeftRadius: 40,\n    borderBottomRightRadius: 40\n  },\n  text_Nav: {\n    marginTop: 20,\n    color: 'white',\n    fontSize: 40\n  }\n});","map":{"version":3,"sources":["C:/Users/shakh/Desktop/РМП/Weather/App.js"],"names":["StatusBar","React","WeatherCard","App","state","temp","undefined","temp_max","temp_min","feels_like","speed","humidity","value","API_KEY","getWeatherCurrent","fetch","url","json","data","console","log","setState","main","toFixed","wind","styles","NavBar","text_Nav","container","text","height","width","itemValue","position","bottom","Component","StyleSheet","create","marginTop","flexDirection","justifyContent","alignItems","fontSize","marginBottom","backgroundColor","paddingBottom","borderBottomLeftRadius","borderBottomRightRadius","color"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet,Text, View, Picker} from 'react-native';\nimport WeatherCard from './src/WeatherCard';\nimport {Button} from \"react-native-web\";\n\nexport default class App extends React.Component {\n\n\n    state = {\n        temp: undefined,\n        temp_max: undefined,\n        temp_min: undefined,\n        feels_like: undefined,\n        speed: undefined,\n        humidity: undefined,\n        value: undefined\n    }\n    API_KEY = \"961b7ded10f2be5cb6b598f0160b2c58\";\n    getWeatherCurrent = async (value) => {\n        const url = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${value}&appid=${this.API_KEY}`);\n        const data = await url.json();\n        console.log(data);\n        this.setState({\n            temp: (data.main.temp-273.15).toFixed(),\n            temp_max: (data.main.temp_max-273.15).toFixed(),\n            temp_min: (data.main.temp_min-273.15).toFixed(),\n            feels_like: (data.main.feels_like-273.15).toFixed(),\n            speed: `${data.wind.speed +'м/с'}`,\n            humidity: `${data.main.humidity + '%'}`,\n            value: value\n        });\n    };\n    render() {\n        return (\n            <View>\n                <StatusBar style=\"light\"/>\n                <View style={styles.NavBar}>\n                    <Text style={styles.text_Nav}>Погода</Text>\n                </View>\n                <View style={styles.container}>\n                    <Text style={styles.text}>Выберите город</Text>\n                    <Picker\n                        selectedValue={this.state.value}\n                        style={{height: 50, width: '80%'}}\n                        onValueChange={(itemValue) =>this.getWeatherCurrent(itemValue)}\n                    >\n                        <Picker.Item label=\"Белгород\" value=\"Belgorod\"/>\n                        <Picker.Item label=\"Санк-Петербург\" value=\"Saint Petersburg\"/>\n                        <Picker.Item label=\"Новосибирск\" value=\"Novosibirsk\"/>\n                        <Picker.Item label=\"Красноярск\" value=\"Krasnoyarsk\"/>\n                    </Picker>\n                </View>\n                <Button label='dlkvnjfnl' atylw={{position:'absolute', bottom:0,width:'100%'}}/>\n                <View style={{position:'absolute', bottom:0}}>\n                    <WeatherCard\n                        temp = {this.state.temp}\n                        temp_max = {this.state.temp_max}\n                        temp_min = {this.state.temp_min}\n                        feels_like = {this.state.feels_like}\n                        wind = {this.state.speed}\n                        humidity = {this.state.humidity}\n                    />\n                </View>\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n        container: {\n            marginTop:10,\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center'\n        },\n        text: {\n            fontSize: 20,\n            marginBottom: 5\n        },\n        NavBar: {\n            height:200,\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundColor: '#3949ab',\n            paddingBottom: 10,\n            borderBottomLeftRadius: 40,\n            borderBottomRightRadius: 40\n        },\n        text_Nav: {\n            marginTop: 20,\n            color:'white',\n            fontSize:40,\n        }\n    }\n);"]},"metadata":{},"sourceType":"module"}