{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\shakh\\\\Desktop\\\\\\u0420\\u041C\\u041F\\\\Weather\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport WeatherCard from \"./src/WeatherCard\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      temp: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      feels_like: undefined,\n      speed: undefined,\n      humidity: undefined\n    };\n    _this.API_KEY = \"961b7ded10f2be5cb6b598f0160b2c58\";\n\n    _this.getWeatherCurrent = function _callee(e, value) {\n      var url, data;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\" + value + \"&appid=\" + _this.API_KEY));\n\n            case 3:\n              url = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(url.json());\n\n            case 6:\n              data = _context.sent;\n              console.log(data);\n\n              _this.setState({\n                temp: data.main.temp - 273.15,\n                temp_max: data.main.temp_max - 273.15,\n                temp_min: data.main.temp_min - 273.15,\n                feels_like: data.main.feels_like - 273.15,\n                speed: data.wind.speed + 'м/с',\n                humidity: data.main.humidity + 'м/с'\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, React.createElement(StatusBar, {\n        style: \"light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.NavBar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.text_Nav,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      }, \"\\u041F\\u043E\\u0433\\u043E\\u0434\\u0430\")), React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434\"), React.createElement(Picker, {\n        style: {\n          height: 50,\n          width: '80%',\n          textAlign: 'center'\n        },\n        onChange: function onChange(itemValue, itemIndex) {\n          _this2.getWeatherCurrent(event, itemValue);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, React.createElement(Picker.Item, {\n        label: \"\\u041C\\u043E\\u0441\\u043A\\u0432\\u0430\",\n        value: \"Moscow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"\\u0421\\u0430\\u043D\\u043A-\\u041F\\u0435\\u0442\\u0435\\u0440\\u0431\\u0443\\u0440\\u0433\",\n        value: \"Saint Petersburg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"\\u041D\\u043E\\u0432\\u043E\\u0441\\u0438\\u0431\\u0438\\u0440\\u0441\\u043A\",\n        value: \"Novosibirsk\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"\\u041A\\u0440\\u0430\\u0441\\u043D\\u043E\\u044F\\u0440\\u0441\\u043A\",\n        value: \"Krasnoyarsk\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      }))), React.createElement(WeatherCard, {\n        temp: this.state.temp,\n        temp_max: this.state.temp_max,\n        temp_min: this.state.temp_min,\n        feels_like: this.state.feels_like,\n        temp_min: this.state.speed,\n        humidity: this.state.humidity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 10,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  text: {\n    fontSize: 20,\n    marginBottom: 5\n  },\n  NavBar: {\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#3949ab',\n    paddingBottom: 10,\n    borderBottomLeftRadius: 40,\n    borderBottomRightRadius: 40\n  },\n  input: {\n    width: '100%',\n    borderStyle: 'solid',\n    borderBottomColor: '#2196f3',\n    textAlign: 'center',\n    marginTop: 40,\n    marginBottom: 20\n  },\n  text_Nav: {\n    marginTop: 20,\n    color: 'white',\n    fontSize: 40\n  }\n});","map":{"version":3,"sources":["C:/Users/shakh/Desktop/РМП/Weather/App.js"],"names":["StatusBar","React","useState","WeatherCard","App","state","temp","undefined","temp_max","temp_min","feels_like","speed","humidity","API_KEY","getWeatherCurrent","e","value","preventDefault","fetch","url","json","data","console","log","setState","main","wind","styles","NavBar","text_Nav","container","text","height","width","textAlign","itemValue","itemIndex","event","Component","StyleSheet","create","marginTop","flexDirection","justifyContent","alignItems","marginBottom","fontSize","backgroundColor","paddingBottom","borderBottomLeftRadius","borderBottomRightRadius","input","borderStyle","borderBottomColor","color"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { StyleSheet,Text, View, Picker,ScrollView} from 'react-native';\nimport WeatherCard from './src/WeatherCard';\n\n\nexport default class App extends React.Component {\n    state = {\n        temp: undefined,\n        temp_max: undefined,\n        temp_min: undefined,\n        feels_like: undefined,\n        speed: undefined,\n        humidity: undefined\n    }\n    API_KEY = \"961b7ded10f2be5cb6b598f0160b2c58\";\n    getWeatherCurrent = async (e, value) => {\n        e.preventDefault();\n        const url = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${value}&appid=${this.API_KEY}`);\n        const data = await url.json();\n        console.log(data);\n        this.setState({\n            temp: (data.main.temp-273.15),\n            temp_max: (data.main.temp_max-273.15),\n            temp_min: (data.main.temp_min-273.15),\n            feels_like: (data.main.feels_like-273.15),\n            speed: (data.wind.speed +'м/с'),\n            humidity: (data.main.humidity +'м/с')\n        });\n    }\n    render() {\n\n        return (\n            <View>\n                <StatusBar style=\"light\"/>\n                <View style={styles.NavBar}>\n                    <Text style={styles.text_Nav}>Погода</Text>\n                </View>\n                <View style={styles.container}>\n                    <Text style={styles.text}>Выберите город</Text>\n                    <Picker\n                        //selectedValue={selectedValue}\n                        style={{height: 50, width: '80%', textAlign: 'center'}}\n                        onChange={(itemValue, itemIndex) => {this.getWeatherCurrent(event,itemValue)}}\n                    >\n                        <Picker.Item label=\"Москва\" value=\"Moscow\"/>\n                        <Picker.Item label=\"Санк-Петербург\" value=\"Saint Petersburg\"/>\n                        <Picker.Item label=\"Новосибирск\" value=\"Novosibirsk\"/>\n                        <Picker.Item label=\"Красноярск\" value=\"Krasnoyarsk\"/>\n                    </Picker>\n                </View>\n                    <WeatherCard\n                        temp = {this.state.temp}\n                        temp_max = {this.state.temp_max}\n                        temp_min = {this.state.temp_min}\n                        feels_like = {this.state.feels_like}\n                        temp_min = {this.state.speed}\n                        humidity = {this.state.humidity}\n                    />\n\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n      container: {\n          marginTop:10,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n          marginBottom: 20\n      },\n      text: {\n        fontSize: 20,\n          marginBottom: 5\n      },\n      NavBar: {\n        height:200,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#3949ab',\n        paddingBottom: 10,\n        borderBottomLeftRadius: 40,\n        borderBottomRightRadius: 40\n      },\n        input: {\n            width: '100%',\n            borderStyle: 'solid',\n            borderBottomColor: '#2196f3',\n            textAlign: 'center',\n            marginTop: 40,\n            marginBottom: 20\n        },\n      text_Nav: {\n        marginTop: 20,\n        color:'white',\n        fontSize:40,\n      }\n    }\n);"]},"metadata":{},"sourceType":"module"}