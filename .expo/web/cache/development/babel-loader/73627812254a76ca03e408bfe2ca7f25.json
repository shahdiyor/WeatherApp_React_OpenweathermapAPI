{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\shakh\\\\Desktop\\\\\\u0420\\u041C\\u041F\\\\Weather\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport ReactDOM from 'react-dom';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport WeatherCard from \"./src/WeatherCard\";\nexport default function App() {\n  var state = {\n    temp: undefined,\n    temp_max: undefined,\n    temp_min: undefined,\n    feels_like: undefined,\n    speed: undefined,\n    humidity: undefined\n  };\n\n  var _useState = useState(\"Krasnoyarsk\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedValue = _useState2[0],\n      setSelectedValue = _useState2[1];\n\n  var API_KEY = \"961b7ded10f2be5cb6b598f0160b2c58\";\n\n  var getWeatherCurrent = function getWeatherCurrent() {\n    var url, data;\n    return _regeneratorRuntime.async(function getWeatherCurrent$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\" + selectedValue + \"&appid=\" + API_KEY));\n\n          case 2:\n            url = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(url.json());\n\n          case 5:\n            data = _context.sent;\n            console.log(data);\n            setState({\n              temp: data.main.temp - 273.15,\n              temp_max: data.main.temp_max - 273.15,\n              temp_min: data.main.temp_min - 273.15,\n              feels_like: data.main.feels_like - 273.15,\n              speed: data.wind.speed + 'м/с',\n              humidity: data.main.humidity + 'м/с'\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, React.createElement(StatusBar, {\n    style: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.NavBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.text_Nav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"\\u041F\\u043E\\u0433\\u043E\\u0434\\u0430\")), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434\"), React.createElement(Picker, {\n    style: {\n      height: 50,\n      width: '80%',\n      textAlign: 'center'\n    },\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setSelectedValue(itemValue), getWeatherCurrent();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"\\u041C\\u043E\\u0441\\u043A\\u0432\\u0430\",\n    value: \"Moscow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"\\u0421\\u0430\\u043D\\u043A-\\u041F\\u0435\\u0442\\u0435\\u0440\\u0431\\u0443\\u0440\\u0433\",\n    value: \"Saint Petersburg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"\\u041D\\u043E\\u0432\\u043E\\u0441\\u0438\\u0431\\u0438\\u0440\\u0441\\u043A\",\n    value: \"Novosibirsk\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"\\u041A\\u0440\\u0430\\u0441\\u043D\\u043E\\u044F\\u0440\\u0441\\u043A\",\n    value: \"Krasnoyarsk\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }))), React.createElement(WeatherCard, {\n    temp: this.state.temp,\n    temp_max: this.state.temp_max,\n    temp_min: this.state.temp_min,\n    feels_like: this.state.feels_like,\n    temp_min: this.state.speed,\n    humidity: this.state.humidity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 10,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  text: {\n    fontSize: 20,\n    marginBottom: 5\n  },\n  NavBar: {\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#3949ab',\n    paddingBottom: 10,\n    borderBottomLeftRadius: 40,\n    borderBottomRightRadius: 40\n  },\n  input: {\n    width: '100%',\n    borderStyle: 'solid',\n    borderBottomColor: '#2196f3',\n    textAlign: 'center',\n    marginTop: 40,\n    marginBottom: 20\n  },\n  text_Nav: {\n    marginTop: 20,\n    color: 'white',\n    fontSize: 40\n  }\n});","map":{"version":3,"sources":["C:/Users/shakh/Desktop/РМП/Weather/App.js"],"names":["StatusBar","ReactDOM","React","useState","WeatherCard","App","state","temp","undefined","temp_max","temp_min","feels_like","speed","humidity","selectedValue","setSelectedValue","API_KEY","getWeatherCurrent","fetch","url","json","data","console","log","setState","main","wind","styles","NavBar","text_Nav","container","text","height","width","textAlign","itemValue","itemIndex","StyleSheet","create","marginTop","flexDirection","justifyContent","alignItems","marginBottom","fontSize","backgroundColor","paddingBottom","borderBottomLeftRadius","borderBottomRightRadius","input","borderStyle","borderBottomColor","color"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport ReactDOM from 'react-dom'\nimport React, { useState } from 'react';\nimport { StyleSheet,Text, View, Picker,ScrollView} from 'react-native';\nimport WeatherCard from './src/WeatherCard';\n\nexport default function App (){\n    \n\n    const state = {\n        temp: undefined,\n        temp_max: undefined,\n        temp_min: undefined,\n        feels_like: undefined,\n        speed: undefined,\n        humidity: undefined\n    }\n    const [selectedValue, setSelectedValue] = useState(\"Krasnoyarsk\");\n    const API_KEY = \"961b7ded10f2be5cb6b598f0160b2c58\";\n    const getWeatherCurrent = async () => {\n        const url = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${selectedValue}&appid=${API_KEY}`);\n        const data = await url.json();\n        console.log(data);\n        setState({\n            temp: (data.main.temp-273.15),\n            temp_max: (data.main.temp_max-273.15),\n            temp_min: (data.main.temp_min-273.15),\n            feels_like: (data.main.feels_like-273.15),\n            speed: (data.wind.speed +'м/с'),\n            humidity: (data.main.humidity +'м/с')\n        });\n    };\n\n        //\n        return (\n            <View>\n                <StatusBar style=\"light\"/>\n                <View style={styles.NavBar}>\n                    <Text style={styles.text_Nav}>Погода</Text>\n                </View>\n                <View style={styles.container}>\n                    <Text style={styles.text}>Выберите город</Text>\n                    <Picker\n                        //selectedValue={selectedValue}\n                        style={{height: 50, width: '80%', textAlign: 'center'}}\n                        onValueChange={(itemValue, itemIndex) =>(setSelectedValue(itemValue),getWeatherCurrent())}\n                    >\n                        <Picker.Item label=\"Москва\" value=\"Moscow\"/>\n                        <Picker.Item label=\"Санк-Петербург\" value=\"Saint Petersburg\"/>\n                        <Picker.Item label=\"Новосибирск\" value=\"Novosibirsk\"/>\n                        <Picker.Item label=\"Красноярск\" value=\"Krasnoyarsk\"/>\n                    </Picker>\n                </View>\n                    <WeatherCard\n                        temp = {this.state.temp}\n                        temp_max = {this.state.temp_max}\n                        temp_min = {this.state.temp_min}\n                        feels_like = {this.state.feels_like}\n                        temp_min = {this.state.speed}\n                        humidity = {this.state.humidity}\n                    />\n            </View>\n        );\n}\n\nconst styles = StyleSheet.create({\n      container: {\n          marginTop:10,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n          marginBottom: 20\n      },\n      text: {\n        fontSize: 20,\n          marginBottom: 5\n      },\n      NavBar: {\n        height:200,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#3949ab',\n        paddingBottom: 10,\n        borderBottomLeftRadius: 40,\n        borderBottomRightRadius: 40\n      },\n        input: {\n            width: '100%',\n            borderStyle: 'solid',\n            borderBottomColor: '#2196f3',\n            textAlign: 'center',\n            marginTop: 40,\n            marginBottom: 20\n        },\n      text_Nav: {\n        marginTop: 20,\n        color:'white',\n        fontSize:40,\n      }\n    }\n);"]},"metadata":{},"sourceType":"module"}