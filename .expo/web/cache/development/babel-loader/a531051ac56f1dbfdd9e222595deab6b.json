{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\shakh\\\\Desktop\\\\\\u0420\\u041C\\u041F\\\\Weather\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nexport default function App() {\n  var API_KEY = \"961b7ded10f2be5cb6b598f0160b2c58\";\n\n  var _useState = useState(\"Krasnoyarsk\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedValue = _useState2[0],\n      setSelectedValue = _useState2[1];\n\n  getWeatherCurrent = function getWeatherCurrent(e) {\n    var url, data;\n    return _regeneratorRuntime.async(function getWeatherCurrent$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\" + selectedValue + \"&appid=\" + API_KEY));\n\n          case 3:\n            url = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(url.json());\n\n          case 6:\n            data = _context.sent;\n            console.log(data);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, React.createElement(StatusBar, {\n    style: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.NavBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text_Nav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, \"\\u041F\\u043E\\u0433\\u043E\\u0434\\u0430\")), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434\"), React.createElement(Picker, {\n    selectedValue: selectedValue,\n    style: {\n      height: 50,\n      width: '80%',\n      textAlign: 'center'\n    },\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setSelectedValue(itemValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"\\u041C\\u043E\\u0441\\u043A\\u0432\\u0430\",\n    value: \"Moscow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"\\u0421\\u0430\\u043D\\u043A-\\u041F\\u0435\\u0442\\u0435\\u0440\\u0431\\u0443\\u0440\\u0433\",\n    value: \"Saint Petersburg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"\\u041D\\u043E\\u0432\\u043E\\u0441\\u0438\\u0431\\u0438\\u0440\\u0441\\u043A\",\n    value: \"Novosibirsk\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"\\u041A\\u0440\\u0430\\u0441\\u043D\\u043E\\u044F\\u0440\\u0441\\u043A\",\n    value: \"Krasnoyarsk\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 10,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  btn: {\n    marginTop: 40,\n    width: '60%',\n    backgroundColor: '#00aeef',\n    borderColor: 'red',\n    borderWidth: 5,\n    borderRadius: 15\n  },\n  text: {\n    fontSize: 20,\n    marginBottom: 5\n  },\n  NavBar: {\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#3949ab',\n    paddingBottom: 10,\n    borderBottomLeftRadius: 40,\n    borderBottomRightRadius: 40\n  },\n  input: {\n    width: '100%',\n    borderStyle: 'solid',\n    borderBottomColor: '#2196f3',\n    textAlign: 'center',\n    marginTop: 40,\n    marginBottom: 20\n  },\n  text_Nav: {\n    marginTop: 20,\n    color: 'white',\n    fontSize: 40\n  }\n});","map":{"version":3,"sources":["C:/Users/shakh/Desktop/РМП/Weather/App.js"],"names":["StatusBar","React","useState","App","API_KEY","selectedValue","setSelectedValue","getWeatherCurrent","e","preventDefault","fetch","url","json","data","console","log","styles","NavBar","text_Nav","container","text","height","width","textAlign","itemValue","itemIndex","StyleSheet","create","marginTop","flexDirection","justifyContent","alignItems","btn","backgroundColor","borderColor","borderWidth","borderRadius","fontSize","marginBottom","paddingBottom","borderBottomLeftRadius","borderBottomRightRadius","input","borderStyle","borderBottomColor","color"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { StyleSheet,Button, Text, View, TextInput, Picker} from 'react-native';\n\n\nexport default function App() {\n    const API_KEY = \"961b7ded10f2be5cb6b598f0160b2c58\";\n    const [selectedValue, setSelectedValue] = useState(\"Krasnoyarsk\");\n\n    getWeatherCurrent = async (e) => {\n        e.preventDefault();\n        const url = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${selectedValue}&appid=${API_KEY}`);\n        const data = await url.json();\n        console.log(data);\n    }\n    return (\n        <View>\n            <StatusBar style=\"light\"/>\n            <View style={styles.NavBar}>\n                <Text style={styles.text_Nav}>Погода</Text>\n            </View>\n            <View style={styles.container}>\n                <Text style={styles.text}>Выберите город</Text>\n                <Picker\n                    selectedValue={selectedValue}\n                    style={{height: 50, width: '80%', textAlign: 'center'}}\n                    onValueChange={(itemValue, itemIndex) =>setSelectedValue(itemValue)}\n                >\n                    <Picker.Item label=\"Москва\" value=\"Moscow\"/>\n                    <Picker.Item label=\"Санк-Петербург\" value=\"Saint Petersburg\"/>\n                    <Picker.Item label=\"Новосибирск\" value=\"Novosibirsk\"/>\n                    <Picker.Item label=\"Красноярск\" value=\"Krasnoyarsk\"/>\n                </Picker>\n            </View>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n      container: {\n          marginTop:10,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n      },\n\n    btn: {\n        marginTop: 40,\n        width: '60%',\n        backgroundColor: '#00aeef',\n        borderColor: 'red',\n        borderWidth: 5,\n        borderRadius: 15\n    },\n      text: {\n        fontSize: 20,\n          marginBottom: 5\n      },\n      NavBar: {\n        height:200,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#3949ab',\n        paddingBottom: 10,\n        borderBottomLeftRadius: 40,\n        borderBottomRightRadius: 40\n      },\n        input: {\n            width: '100%',\n            borderStyle: 'solid',\n            borderBottomColor: '#2196f3',\n            textAlign: 'center',\n            marginTop: 40,\n            marginBottom: 20\n        },\n      text_Nav: {\n        marginTop: 20,\n        color:'white',\n        fontSize:40,\n      }\n    }\n);"]},"metadata":{},"sourceType":"module"}